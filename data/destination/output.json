{"content":"import BaseApi from '@/api/clients/BaseApi'\nimport { removeEmpty } from '@realm-kf/cerulean-utils'\n\nclass PickingApi extends BaseApi {\n  getPickList (payload, { apiVersion }) {\n    const headers = {\n      headers: {\n        ...apiVersion && { 'kits-api-version': apiVersion }\n      }\n    }\n    return this.client.get('/picklist', payload, { ...headers, cancelTokenParent: this.getPickList })\n  }\n\n  getPick (id, { apiVersion, hasCentiro, hasSda, hasGapi }) {\n    const headers = {\n      headers: {\n        ...apiVersion && { 'kits-api-version': apiVersion }\n      }\n    }\n    return this.client.get(`/picklist/${id}`, { hasCentiro, hasSda, hasGapi }, headers)\n  }\n\n  patchQuantity ({ pickId, lineItemId, quantity, binNumber, ean, productNumber, quantityUomCode, locationPickedQuantity, apiVersion }) {\n    const headers = {\n      headers: {\n        ...apiVersion && { 'kits-api-version': apiVersion }\n      }\n    }\n    return this.client.patch(`/picklist/${pickId}/lineitems/${lineItemId}`, { quantity, binNumber, ean, productNumber, quantityUomCode, locationPickedQuantity }, headers)\n  }\n\n  patchMultipleQuantities (pickId, payload) {\n    const headers = {\n      headers: {\n        'kits-api-version': 3\n      }\n    }\n\n    return this.client.patch(`/picklist/${pickId}/lineitems`, payload, headers)\n  }\n\n  confirmPicking ({ pickId, partiallyPickedItems, sscApiVersion, orderNumber }) {\n    return this.client.post(`/picklist/${pickId}/confirm`, removeEmpty({ partiallyPickedItems, sscApiVersion, orderNumber }))\n  }\n\n  updatePickingDbs ({ pickId, status, assignedTo, orderId, fulfilmentType, isPicklist, isContactFree }) {\n    return this.client.put(`/picklist/${pickId}`, {\n      status,\n      assignedTo,\n      orderId,\n      fulfilmentType,\n      isPicklist,\n      isContactFree\n    })\n  }\n\n  getPickingDbPickByOrderNumber ({ orderNumber, hasCentiro, hasSda }) {\n    return this.client.get(`/picklist/byOrderNumber/${orderNumber}`, { hasCentiro, hasSda })\n  }\n\n  getPickCount ({ status, fulfilmentType }) {\n    return this.client.get('/picklist/get-pick-counts', {\n      status,\n      fulfilmentType\n    })\n  }\n\n  getOrders (status, fulfilmentType, daysPrior) {\n    return this.client.get('/orders', {\n      status,\n      fulfilmentType,\n      daysPrior\n    })\n  }\n\n  getPendingDelocations ({ daysPrior }) {\n    return this.client.get('/pending-delocations', { daysPrior })\n  }\n\n  getPendingDelocationsByOrderNumber (orderNumber) {\n    return this.client.get(`/pending-delocations/${orderNumber}`)\n  }\n\n  patchPickStatuses (picks) {\n    return this.client.patch('/orders/picks', Array.isArray(picks) ? picks : [picks])\n  }\n\n  getParcelLabels (payload) {\n    return this.client.post('/gcms/add-and-print-parcel', payload)\n  }\n\n  getExistingParcelLabels (payload) {\n    return this.client.post('/gcms/print-parcel', payload)\n  }\n\n  getParcels (orderId) {\n    return this.client.get(`/gcms/parcels/${orderId}`)\n  }\n\n  getCarrierOrders ({ fulfilmentType }) {\n    return this.client.get('/gcms/get-carrier-orders', { fulfilmentType })\n  }\n}\n\nexport default new PickingApi('picking')\n"}